trac_table,trac_var_name,trac_var_type,transformation,sdsc_table,sdsc_var_name,Notes
,,,,A1,RID,
,,,,A1,VISCODE,
tbl_subject,demographic_gender,varchar(255),"str(row[""demographic_gender""]).split("":"")[0] if str(row[""demographic_gender""]).split("":"")[0] != ""nan"" else row[""demographic_gender""]",A1,GENDER,
tbl_subject,demographic_marital_status_combo,varchar(255),"MARITAL_STATUS_MAP.get(int(row[""demographic_marital_status_combo""]), ""Unknown"") if pd.notna(row[""demographic_marital_status_combo""]) else None",A1,MARISTAT,
tbl_subject,demographic_sex_at_birth,varchar(255),"BIRTHSEX_MAP.get(int(row[""demographic_sex_at_birth""]), ""Unknown"") if pd.notna(row[""demographic_sex_at_birth""]) else None",A1,BIRTHSEX,
,,,,A1,BIRTHYR,
,,,,A1,BIRTHMO,
tbl_subject,education_highest,varchar(255),"LVLEDUC_MAP.get(int(row[""education_highest""]), ""Unknown"") if pd.notna(row[""education_highest""]) else None",A1,LVLEDUC,
tbl_subject,education_level,integer,"str(row[""education_level""]).replace("".0"", """") if pd.notna(row[""education_level""]) else None",A1,EDUC,
tbl_subject,demographic_race,varchar(255),"f""{{{int(row['demographic_race'])}}}"" if pd.notna(row['demographic_race']) else None",A1,RACE,
tbl_subject,subject_occupation,varchar(255),,A1,PRIOCC,
tbl_subject,veteran,varchar(255),"VETERAN_MAP.get(int(row[""veteran""]), ""Unknown"") if pd.notna(row[""veteran""]) else None",A1,SERVED,
tbl_subject_screen,contact_memory_prob,varchar(255),"MEMWORS_MAP.get(int(row[""contact_memory_prob""]), ""Unknown"") if pd.notna(row[""contact_memory_prob""]) else None",A1,MEMWORS,
tbl_recruitment,referral_source_combo,varchar(255),"REFERSC_MAP.get(int(row[""referral_source_combo""]), ""Unknown"") if pd.notna(row[""referral_source_combo""]) else None",A1,REFERSC,
tbl_recruitment,referral_comments,text,,A1,COMMENT,
tbl_subject,demographic_language_caregiver,varchar(255),"LANG_MAP.get(int(row[""demographic_language_caregiver""]), ""Unknown"") if pd.notna(row[""demographic_language_caregiver""]) else None",A2,LANG,
,,,,A2,RID,
,,,,A2,VISCODE,
tbl_subject_contacts,relationship_with_subject,varchar(255),"INRELTO_MAP.get(int(row[""relationship_with_subject""]), ""Unknown"") if pd.notna(row[""relationship_with_subject""]) else None",A2,INRELTO,
,,,,A4a,RID,
,,,,A4a,VISCODE,
tbl_subject_screen,ad_disease_modifying,varchar(255),"YES_NO_MAP.get(int(row[""ad_disease_modifying""]), ""Unknown"") if pd.notna(row[""ad_disease_modifying""]) else None",A4a,TRTBIOMARK,
tbl_subject_screen,ad_symptomatic,varchar(255),"YES_NO_MAP.get(int(row[""ad_symptomatic""]), ""Unknown"") if pd.notna(row[""ad_symptomatic""]) else None",A4a,ADVEVENT,
,,,,A5,RID,
,,,,,,
tbl_subject_screen,ms_cancer,varchar(255),"YES_NO_MAP.get(int(row[""ms_cancer""]), ""Unknown"") if pd.notna(row[""ms_cancer""]) else None",A5,CANCERACTV,
tbl_subject_screen,ms_diabetes_insulindep,varchar(255),"YES_NO_MAP.get(int(row[""ms_diabetes_insulindep""]), ""Unknown"") if pd.notna(row[""ms_diabetes_insulindep""]) else None",A5,DIABETES,
tbl_subject_screen,ms_headtraum_wloss,varchar(255),"YES_NO_MAP.get(int(row[""ms_headtraum_wloss""]), ""Unknown"") if pd.notna(row[""ms_headtraum_wloss""]) else None",A5,HEADINJURY,
tbl_subject_screen,ms_psychiatric_dx,varchar(255),"YES_NO_MAP.get(int(row[""ms_psychiatric_dx""]), ""Unknown"") if pd.notna(row[""ms_psychiatric_dx""]) else None",A5,PSYCDIS,
tbl_subject_screen,ms_stroke,varchar(255),"YES_NO_MAP.get(int(row[""ms_stroke""]), ""Unknown"") if pd.notna(row[""ms_stroke""]) else None",A5,CBSTROKE,
,,,,b4,RID,
,,,,b4,VISCODE,
tbl_subject,cdrglob,integer,,b4,CDRGLOB,
,,,,C1,RID,
,,,,C1,VISCODE,
tbl_subject,demographic_language_testing,varchar(255),"LANG_MAP.get(int(row[""demographic_language_testing""]), ""Unknown"") if pd.notna(row[""demographic_language_testing""]) else None",C1,MMSELAN,
tbl_subject,mmse,integer,,C1,MMSE,
tbl_subject,lst_moca,integer,,C1,MOCATOTS,
tbl_subject,lst_drs,integer,,C1,XPBS01DTO,
,,,,C1,VISITDATE,bc there are two visit dates (and C1 table is merged first) this will show as VISITDATE_x
tbl_subject,subject_status_adrc_xfer,varchar(255),,enroll,OLDADCID,
tbl_subject,subject_status_adrc_xfer_name,varchar(255),,enroll,PREVENRL,
,,,,enroll,RID,
tbl_subject,dod,date,,path,DATEDEATH,
tbl_subject,path_id,tbl_subject,,path,PATHID,
,,,,path,RID,
tbl_visits,yr_in_study,int,,registry,ADRCVIS,
,,,,registry,RID,
,,,,registry,VISCODE,
,,,,registry,VISITDATE,bc there are two visit dates (and registry table is merged second) this will show as VISITDATE_y
,,,,Roster,RID,
,adrc_long_id,integer,,Roster,REGTRYID,
tbl_subject,naccid,varchar(255),,roster,NACCID,
tbl_subject,dob,date,"f""{int(row['BIRTHYR'])}-{int(row['BIRTHMO']):02d}-01"" if pd.notna(row[""BIRTHYR""]) and pd.notna(row[""BIRTHMO""]) else None",,,
tbl_visits,contact_memory_prob_onset_yr,date,,,,
tbl_visits,mmse,integer,,,,
tbl_visits,mmse_date,date,,,,
tbl_visits,moca,integer,,,,
tbl_visits,moca_date,date,,,,
tbl_visits,drs,integer,,,,
tbl_visits,drs_date,date,,,,
tbl_visits,visit_date,date,,,VISITDATE_y,
,c1_visit_date,date,,,VISITDATE_x,